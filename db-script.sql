-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


DROP TABLE IF EXISTS public."PROJ";

CREATE TABLE IF NOT EXISTS public."PROJ"
(
    "PROJ_ID" bigint NOT NULL,
    "NAME" text COLLATE pg_catalog."default" NOT NULL,
    "HEAD_ID" bigint NOT NULL,
    "IS_CLOSED" boolean NOT NULL,
    CONSTRAINT "PROJ_pkey" PRIMARY KEY ("PROJ_ID")
);

DROP TABLE IF EXISTS public."PROJ_TASK";

CREATE TABLE IF NOT EXISTS public."PROJ_TASK"
(
    "PROJ_ID" bigint NOT NULL,
    "TASK_ID" bigint NOT NULL,
    CONSTRAINT "PROJ_TASK_pkey" PRIMARY KEY ("PROJ_ID", "TASK_ID")
);

DROP TABLE IF EXISTS public."PROJ_USER_ROLE";

CREATE TABLE IF NOT EXISTS public."PROJ_USER_ROLE"
(
    "PROJ_ID" bigint NOT NULL,
    "USER_ID" bigint NOT NULL,
    "ROLE_ID" bigint NOT NULL,
    CONSTRAINT "PROJ_USER_ROLE_pkey" PRIMARY KEY ("PROJ_ID", "USER_ID", "ROLE_ID")
);

DROP TABLE IF EXISTS public."ROLE";

CREATE TABLE IF NOT EXISTS public."ROLE"
(
    "ROLE_ID" bigint NOT NULL,
    "ROLE_NAME" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "ROLE_pkey" PRIMARY KEY ("ROLE_ID")
);

DROP TABLE IF EXISTS public."SPRINT";

CREATE TABLE IF NOT EXISTS public."SPRINT"
(
    "SPRINT_ID" bigint NOT NULL,
    "FROM_DATE" date NOT NULL,
    "TO_DATE" date NOT NULL,
    "PROJ_ID" bigint NOT NULL,
    CONSTRAINT "SPRINT_pkey" PRIMARY KEY ("SPRINT_ID")
);

DROP TABLE IF EXISTS public."STATUS";

CREATE TABLE IF NOT EXISTS public."STATUS"
(
    "STATUS_ID" bigint NOT NULL,
    "STATUS_NAME" text COLLATE pg_catalog."default",
    CONSTRAINT "STATUS_pkey" PRIMARY KEY ("STATUS_ID")
);

DROP TABLE IF EXISTS public."TASK";

CREATE TABLE IF NOT EXISTS public."TASK"
(
    "TASK_ID" bigint NOT NULL,
    "NAME" text COLLATE pg_catalog."default" NOT NULL,
    "STATUS_ID" bigint NOT NULL,
    "REPORTER_ID" bigint NOT NULL,
    "ASSIGNEE_ID" bigint NOT NULL,
    "DESCRIPTION" text COLLATE pg_catalog."default",
    "SPRINT_ID" bigint,
    CONSTRAINT "TASK_pkey" PRIMARY KEY ("TASK_ID")
);

DROP TABLE IF EXISTS public."USER";

CREATE TABLE IF NOT EXISTS public."USER"
(
    "USER_ID" bigint NOT NULL,
    "USER_NAME" text COLLATE pg_catalog."default" NOT NULL,
    "EMAIL" text COLLATE pg_catalog."default" NOT NULL,
    "PASSWORD" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "USER_pkey" PRIMARY KEY ("USER_ID")
);

ALTER TABLE IF EXISTS public."PROJ"
    ADD CONSTRAINT "PROJ_HEAD_ID_fkey" FOREIGN KEY ("HEAD_ID")
    REFERENCES public."USER" ("USER_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROJ_TASK"
    ADD CONSTRAINT "PROJ_TASK_PROJ_ID_fkey" FOREIGN KEY ("PROJ_ID")
    REFERENCES public."PROJ" ("PROJ_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROJ_TASK"
    ADD CONSTRAINT "PROJ_TASK_TASK_ID_fkey" FOREIGN KEY ("TASK_ID")
    REFERENCES public."TASK" ("TASK_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROJ_USER_ROLE"
    ADD CONSTRAINT "PROJ_USER_ROLE_PROJ_ID_fkey" FOREIGN KEY ("PROJ_ID")
    REFERENCES public."PROJ" ("PROJ_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROJ_USER_ROLE"
    ADD CONSTRAINT "PROJ_USER_ROLE_ROLE_ID_fkey" FOREIGN KEY ("ROLE_ID")
    REFERENCES public."ROLE" ("ROLE_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."PROJ_USER_ROLE"
    ADD CONSTRAINT "PROJ_USER_ROLE_USER_ID_fkey" FOREIGN KEY ("USER_ID")
    REFERENCES public."USER" ("USER_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."SPRINT"
    ADD CONSTRAINT "SPRINT_PROJ_ID_fkey" FOREIGN KEY ("PROJ_ID")
    REFERENCES public."PROJ" ("PROJ_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TASK"
    ADD CONSTRAINT "TASK_ASSIGNEE_ID_fkey" FOREIGN KEY ("ASSIGNEE_ID")
    REFERENCES public."USER" ("USER_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TASK"
    ADD CONSTRAINT "TASK_REPORTER_ID_fkey" FOREIGN KEY ("REPORTER_ID")
    REFERENCES public."USER" ("USER_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TASK"
    ADD CONSTRAINT "TASK_SPRINT_ID_fkey" FOREIGN KEY ("SPRINT_ID")
    REFERENCES public."SPRINT" ("SPRINT_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."TASK"
    ADD CONSTRAINT "TASK_STATUS_ID_fkey" FOREIGN KEY ("STATUS_ID")
    REFERENCES public."STATUS" ("STATUS_ID") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;